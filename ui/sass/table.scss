// Name:                      Table
//
// Description:               Define style for table
//
// Component:                `.am-table`
//
// Modifiers:                `.am-table-bordered`
//                           `.am-table-radius`
//                           `.am-table-striped`
//                           `.am-table-hover`
//
// =============================================================================

// Table mixin
// =============================================================================

@mixin table-row-variant($state, $background, $border) {
	// Exact selectors below required to override `.table-striped` and prevent
	// inheritance to nested tables.
	.table > thead > tr,
	.table > tbody > tr,
	.table > tfoot > tr {
		> td.$state,
		> th.$state,
		&.$state > td,
		&.$state > th {
			background-color: $background;
			border-color: $border;
		}
	}

	// Hover states for `.table-hover`
	// Note: this is not available for cells or rows within `thead` or `tfoot`.
	.ui-table-hover > tbody > tr {
		> td.$state:hover,
		> th.$state:hover,
		&.$state:hover > td,
		&.$state:hover > th {
			background-color: darken($background, 5%);
			border-color: darken($border, 5%);
		}
	}
}

@mixin table-state-variant($state, $bg, $color) {
	@if $color == '' {
		> td.ui-
		$state,
	> th . ui- $state,
	& . ui- $state > td,
	& . ui- $state > th {
		background-color: $bg;
	}
	} @else @if $bg == '' {
		> td.ui-
		$state,
	> th . ui- $state,
	& . ui- $state > td,
	& . ui- $state > th {
		color: $color;
	}
	} @else {
		> td.ui-
		$state,
	> th . ui- $state,
	& . ui- $state > td,
	& . ui- $state > th {
		color: $color;
		background-color: $bg;
	}
	}
}

/* ==========================================================================
   Component: Table
 ============================================================================ */

table {
	max-width: 100%;
	background-color: $table-bg;
	empty-cells: show;

	code {
		white-space: normal;
	}
}

th {
	text-align: left;
}

.ui-table {
	width: 100%;
	margin-bottom: $global-margin;
	border-spacing: 0;
	border-collapse: separate;

	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				padding: $table-cell-padding;
				line-height: $table-line-height;
				vertical-align: top;
				border-top: 1px solid $table-border-color;
			}
		}
	}

	// Bottom align for headings
	> thead > tr > th {
		vertical-align: bottom;
		border-bottom: 1px solid $table-border-color;
	}

	// Remove top border from thead
	> caption + thead,
	> colgroup + thead,
	> thead:first-child {
		> tr:first-child {
			> th,
			> td {
				border-top: 0;
			}
		}
	}

	// multiple tbody
	> tbody + tbody {
		tr:first-child {
			td {
				border-top: 2px solid $table-border-color;
			}
		}
	}

}

/* Bordered version */
.ui-table-bordered {
	border: 1px solid $table-border-color;

	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				border-left: 1px solid $table-border-color;

				&:first-child {
					border-left: none;
				}
			}
		}
	}
}

/* Border-radius version */

.ui-table-radius {
	border: 1px solid $table-border-color;
	// box-shadow: 0 0 1px $gray-light;
	border-radius: $radius-normal;

	> thead {
		> tr:first-child {
			> th:first-child,
			> td:first-child {
				border-top-left-radius: $radius-normal;
				border-left: none;
			}

			> th:last-child,
			> td:last-child {
				border-top-right-radius: $radius-normal;
				border-right: none;
			}
		}
	}

	> tbody {
		> tr {
			> th:first-child,
			> td:first-child {
				border-left: none;
			}

			> th:last-child,
			> td:last-child {
				border-right: none;
			}
		}

		> tr:last-child {
			> th,
			> td {
				border-bottom: none;
			}

			> th:first-child,
			> td:first-child {
				border-bottom-left-radius: $radius-normal;
			}

			> th:last-child,
			> td:last-child {
				border-bottom-right-radius: $radius-normal;
			}
		}
	}
}

/* Zebra-striping */

.ui-table-striped > tbody > tr:nth-child(odd) {
	> td,
	> th {
		background-color: $table-bg-striped;
	}
}

/* Hover effect */

.ui-table-hover > tbody > tr:hover {
	> td,
	> th {
		background-color: $table-bg-hover;
	}
}

// Modifiers: compact
// =============================================================================

.ui-table-compact {
	> thead,
	> tbody,
	> tfoot {
		> tr {
			> th,
			> td {
				padding: $table-cell-padding-compact;
			}
		}
	}
}

// Modifiers: states
// =============================================================================

.ui-table > thead > tr,
.ui-table > tbody > tr,
.ui-table > tfoot > tr {
	@include table-state-variant(active, $table-bg-active, '');
	@include table-state-variant(disabled, '', $gray-light);
	@include table-state-variant(primary, $table-primary-bg, $table-primary-color);
	@include table-state-variant(success, $table-success-bg, $table-success-color);
	@include table-state-variant(warning, $table-warning-bg, $table-warning-color);
	@include table-state-variant(danger, $table-danger-bg, $table-danger-color);
}
